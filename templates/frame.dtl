<script>
var Syncshare = Syncshare || {};
Syncshare.Proxy = function(window, undefined) {

    var Request = function(url) {
        var xhr;

        try { 
            xhr = new ActiveXObject('Msxml2.XMLHTTP'); 
        }
        catch (e) {
            try { 
                xhr = new ActiveXObject('Microsoft.XMLHTTP'); 
            }
            catch (e) {
                xhr = new XMLHttpRequest(); 
            }
        }
        this.post = function(payload, token) {
            xhr.open('POST', url, true);
            xhr.setRequestHeader('Method', 'POST '+url+' HTTP/1.1');
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send('payload='+payload);
        };
    };

    var init = function(service) {
        var esr = new EventSource('/syncshare/sse/'+service),
            msg = function(type, response) {
                response = response.split('|');

                // send the message back to parent frame
                window.parent.postMessage({type: type, payload: JSON.parse(response[1])}, '*');
            };


        // bubble message up to parent window

        esr.addEventListener('message',    function(reply) { msg('message', reply.data); });
        esr.addEventListener('broadcast',  function(reply) { msg('broadcast', reply.data); });

        // delegate calls to designated queue

        window.addEventListener('message', function(e) {
            new Request('/syncshare/sse/' + service +'/'+ e.data.call).post(JSON.stringify(e.data.payload));
        }, false);
    };
    init('{{ service }}');
}(window);
</script>
